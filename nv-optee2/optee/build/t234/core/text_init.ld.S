	*(.text.cpu_idle)
	*(.text.__cpu_spin_lock)
	*(.text.__cpu_spin_trylock)
	*(.text.__cpu_spin_unlock)
	*(.text.tlbi_all)
	*(.text.dcache_cleaninv_range)
	*(.text.do_dcsw_op)
	*(.text.dcache_op_louis)
	*(.text.icache_inv_all)
	*(.text.thread_resume)
	*(.text.thread_smc)
	*(.text.thread_init_vbar)
	*(.text.thread_unwind_user_mode)
	*(.text.thread_excp_vect)
	*(.text.el0_svc)
	*(.text.el1_sync_abort)
	*(.text.el0_sync_abort)
	*(.text.elx_irq)
	*(.text.elx_fiq)
	*(.text.thread_cpu_off_handler)
	*(.text._assert_trap)
	*(.text.thread_lazy_save_ns_vfp)
	*(.text.thread_lazy_restore_ns_vfp)
	*(.text.select_vector_wa_spectre_v2)
	*(.text.thread_system_reset_handler)
	*(.text.thread_cpu_suspend_handler)
	*(.text.thread_cpu_resume_handler)
	*(.text.thread_system_off_handler)
	*(.text.thread_get_exceptions)
	*(.text.select_vector_wa_spectre_bhb)
	*(.text.thread_set_exceptions)
	*(.text.thread_mask_exceptions)
	*(.text.thread_unmask_exceptions)
	*(.text.thread_alloc_and_run)
	*(.text.thread_resume_from_rpc)
	*(.text.thread_get_saved_thread_sp)
	*(.text.thread_state_free)
	*(.text.thread_init_stack)
	*(.text.thread_init_primary)
	*(.text.thread_init_per_cpu)
	*(.text.thread_kernel_save_vfp)
	*(.text.thread_kernel_restore_vfp)
	*(.text.thread_user_enable_vfp)
	*(.text.thread_user_save_vfp)
	*(.text.thread_state_suspend)
	*(.text.thread_scall_handler)
	*(.text.mobj_get_cookie)
	*(.text.mobj_put)
	*(.text.thread_handle_fast_smc)
	*(.text.thread_handle_std_smc)
	*(.text.thread_disable_prealloc_rpc_cache)
	*(.text.thread_enable_prealloc_rpc_cache)
	*(.text.thread_std_smc_entry)
	*(.text.thread_foreign_intr_exit)
	*(.text.handle_user_mode_panic.isra.0)
	*(.text.__abort_print.part.0)
	*(.text.get_core_pos)
	*(.text.save_abort_info_in_tsd)
	*(.text.abort_is_user_exception)
	*(.text.__print_abort_info)
	*(.text.abort_print_error)
	*(.text.abort_print)
	*(.text.abort_handler)
	*(.text.vfp_is_enabled)
	*(.text.vfp_enable)
	*(.text.vfp_disable)
	*(.text.vfp_lazy_save_state_init)
	*(.text.vfp_lazy_save_state_final)
	*(.text.vfp_lazy_restore_state)
	*(.text.vfp_save_extension_regs)
	*(.text.vfp_restore_extension_regs)
	*(.text.get_core_pos_mpidr)
	*(.text.main_secondary_init_gic)
	*(.text.plat_get_random_stack_canary)
	*(.text.__panic_at_smc_return)
	*(.text.boot_init_primary_early)
	*(.text.boot_cpu_on_handler)
	*(.text.boot_set_fixed_secmem_range)
	*(.text._start)
	*(.text.relocate)
	*(.text.cpu_on_handler)
	*(.text.unhandled_cpu)
	*(.text.print_kernel_stack)
	*(.text.dummy.boot_init_primary_late)
	*(.text.dummy.__thread_std_smc_entry)
	*(.text.arch_va2pa_helper)
	*(.text.cpu_mmu_enabled)
	*(.text.core_init_mmu_prtn_tee)
	*(.text.core_mmu_get_user_mapping_entry.isra.0.constprop.0)
	*(.text.core_init_mmu)
	*(.text.core_init_mmu_regs)
	*(.text.core_mmu_find_table)
	*(.text.core_mmu_entry_to_finer_grained)
	*(.text.core_mmu_set_entry_primitive)
	*(.text.core_mmu_get_entry_primitive)
	*(.text.core_mmu_user_va_range_is_defined)
	*(.text.core_mmu_get_user_va_range)
	*(.text.core_mmu_user_mapping_is_active)
	*(.text.core_mmu_get_user_map)
	*(.text.core_mmu_set_user_map)
	*(.text.core_mmu_get_fault_type)
	*(.text.pgt_init)
	*(.text.tee_entry_get_api_call_count)
	*(.text.tee_entry_get_api_uuid)
	*(.text.tee_entry_get_api_revision)
	*(.text.tee_entry_get_os_uuid)
	*(.text.tee_entry_get_os_revision)
	*(.text.__tee_entry_fast)
	*(.text.tee_entry_fast)
	*(.text.console_init)
	*(.text.crypto_rng_read)
	*(.text.comb_uart_getc)
	*(.text.comb_uart_have_rx_data)
	*(.text.comb_uart_putc)
	*(.text.comb_uart_flush)
	*(.text.tegra_combined_uart_init)
	*(.text.hw_get_random_bytes)
	*(.text.tegra_se_rng_get_random)
	*(.text.spinlock_count_incr)
	*(.text.spinlock_count_decr)
	*(.text.have_spinlock)
	*(.text._assert_log)
	*(.text._assert_break)
	*(.text.console_putc)
	*(.text.console_flush)
	*(.text.register_serial_console)
	*(.text.itr_core_handler)
	*(.text.__do_panic)
	*(.text.plat_trace_ext_puts)
	*(.text.trace_ext_puts)
	*(.text.trace_ext_get_thread_id)
	*(.text.trace_ext_get_core_id)
	*(.text.refcount_dec)
	*(.text.udelay)
	*(.text.is_valid_conf_and_notnull_size)
	*(.text.core_is_buffer_inside)
	*(.text.ts_get_current_session_may_fail)
	*(.text.ts_get_current_session)
	*(.text.scattered_array_relax_ptr)
	*(.text.get_core_local)
	*(.text.thread_init_canaries)
	*(.text.thread_check_canaries)
	*(.text.thread_lock_global)
	*(.text.thread_unlock_global)
	*(.text.thread_get_core_local)
	*(.text.thread_clr_boot_thread)
	*(.text.thread_get_tmp_sp)
	*(.text.thread_stack_size)
	*(.text.get_stack_limits)
	*(.text.thread_is_from_abort_mode)
	*(.text.thread_get_id_may_fail)
	*(.text.thread_stack_start)
	*(.text.thread_get_id)
	*(.text.thread_init_threads)
	*(.text.thread_init_boot_thread)
	*(.text.thread_init_thread_core_local)
	*(.text.thread_init_core_local_stacks)
	*(.text.thread_get_tsd)
	*(.text.thread_restore_foreign_intr)
	*(.text.is_user_ta_ctx)
	*(.text.mobj_get_pa)
	*(.text.vm_va2pa)
	*(.text.vm_pa2va)
	*(.text.va_is_in_map)
	*(.text.find_map_by_va)
	*(.text.cmp_mmap_by_lower_va)
	*(.text.map_pa2va)
	*(.text._pbuf_is_inside)
	*(.text.to_user_mode_ctx)
	*(.text.cmp_init_mem_map)
	*(.text.add_va_space.constprop.0)
	*(.text.add_phys_mem.part.0.constprop.0)
	*(.text.find_map_by_type_and_pa)
	*(.text.core_mmu_set_secure_memory)
	*(.text.core_mmu_get_ta_range)
	*(.text.core_mmu_nsec_ddr_is_defined)
	*(.text.core_mmu_type_to_attr)
	*(.text.core_init_mmu_map)
	*(.text.core_mmu_set_entry)
	*(.text.core_mmu_get_entry)
	*(.text.core_mmu_map_region)
	*(.text.virt_to_phys)
	*(.text.check_va_matches_pa.part.0)
	*(.text.phys_to_virt)
	*(.text.phys_to_virt_io)
	*(.text.io_pa_or_va)
	*(.text.ftrace_map_lr)
	*(.text.pauth_strip_pac)
	*(.text.unwind_stack_arm64)
	*(.text.print_stack_arm64)
	*(.text.raw_malloc_return_hook.isra.0)
	*(.text.bget_buf_size.part.0)
	*(.text.malloc_lock.constprop.0)
	*(.text.cpu_spin_unlock_xrestore)
	*(.text.bget)
	*(.text.brel)
	*(.text.bpool)
	*(.text.raw_realloc)
	*(.text.raw_malloc_add_pool)
	*(.text.malloc_add_pool)
	*(.text.swapfunc)
	*(.text.med3)
	*(.text.qsort)
	*(.text.__stack_chk_fail)
	*(.text.memchr)
	*(.text.memcpy)
	*(.text.memmove)
	*(.text.memset)
	*(.text.strlen)
	*(.text.__vsnprintf)
	*(.text.vsnprintk)
	*(.text.snprintk)
	*(.text.kprintf.constprop.0)
	*(.text.trace_vprintf)
	*(.text.trace_printf)
